#!/bin/sh
# postinst script for sample2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
  configure)
    APPDIR=/apps/sample2
    chown -R admin:admin $APPDIR
    # Preserve config directory unless there is new config file
    [ ! -d $APPDIR/config ] || mkdir $APPDIR/config
    for conf in $(cd $APPDIR/default-config; find . -type f -o -type l); do
      [ -e $APPDIR/config/$conf -o -L $APPDIR/config/$conf ] || (cd $APPDIR/default-config; tar cf - $conf) | (cd $APPDIR/config; tar xpf -) 2>/dev/null
    done
    # Restart apache so that all site-enables will be updated
    if systemctl restart apache2.service; then
      # success
      event_push app readynasd '<add-s resource-type="LocalApp" resource-id="LocalApp"><LocalApp appname="sample2" success="1" reboot="1"/></add-s>' 0 0
    else
      # error
      event_push app readynasd '<add-s resource-type="LocalApp" resource-id="LocalApp"><LocalApp appname="sample2" success="0"/></add-s>' 0 0
    fi
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
